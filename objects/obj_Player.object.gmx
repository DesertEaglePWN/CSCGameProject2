<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlayerIdle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Player

depth = 0;

// Current Health/mana
global.Stamina = 100;
global.Mana = 100;
invincible = false; 

// Max Health/Mana
global.max_Stamina = 100;
global.max_Mana    = 100;

playerGravity = 2;
movementSpeed = 5;
horizontalSpeed = 0;
verticalSpeed = 0;
jumpSpeed =  8;
image_speed = .2;

// -1 In Use
// 0 Cannot Use
// 1 Ready To Use 
attacking = false;
canAttack = true;
canJump = 1;
canTeleport = 1;

//0 Left Facing
//1 Right Facing
playerDirection = 0;

// Spell Select
// fireball = 0
// pull = 1
// stone = 3
spellIndex = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>5 * room_speed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>11</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(canJump);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Teleport Cooldown
if (!collision_rectangle(x - (sprite_width/2), y + sprite_height, x + (sprite_width/2), y, obj_RoomTeleport, false, false))
{
    //If not colliding with a teleport
    canTeleport = 1;
}
else
{
    //Reset alarm to try again
    alarm[10] = 10; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack = true
attacking = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump Alarm
if (canJump == -1)
{
    //If Jumping, start falling
    canJump = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Player Input
//These are the variables used to check for player input. 
//Key inputs get the present state of the input;
//Pressed inputs are booleans values that return true if the input is being recieved in the current frame.


// Movement
keyMoveLeft = (keyboard_check(ord('A')) || keyboard_check(vk_left));
keyMoveRight = keyboard_check(ord('D')) || keyboard_check(vk_right);
keyJump = keyboard_check_pressed(ord('W')) || keyboard_check_pressed(vk_space);
pressedJump = keyboard_check_pressed(ord('W')) || keyboard_check_pressed(vk_space);
keyCrouch =  keyboard_check(ord('S')) || keyboard_check(ord('vk_control'));
pressedCrouch = keyboard_check_pressed(ord('S')) || keyboard_check_pressed('vk_control');

// Melee Attack
keyAttack = mouse_check_button(mb_left) || keyboard_check(ord('J'));
pressedAttack = mouse_check_button_pressed(mb_left) || keyboard_check_pressed('J');

// Spell Attack
keyUseSpell = mouse_check_button(mb_right) || keyboard_check(ord('K'));
pressedUseSpell = mouse_check_button_pressed(mb_right) || keyboard_check_pressed('K');

// Spell Switch (with Q or mousewheel)
keySpellSwitch = keyboard_check(ord('Q')); 
pressedSpellSwitch =  keyboard_check_pressed(ord('Q')) || mouse_wheel_down() || mouse_wheel_up();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute Player Movement

horizontalSpeed = (-keyMoveLeft + keyMoveRight) * movementSpeed;
bbox_width = bbox_right - bbox_left;

//Horizontal Collision
if (place_meeting(x + horizontalSpeed, y, obj_Collision)){
    while(!place_meeting(x,y,obj_Collision)){
        x += sign(horizontalSpeed);
    }
    horizontalSpeed = 0;
}

x += horizontalSpeed;

//Vertical Collision
if (place_meeting(x, y + verticalSpeed, obj_Collision)){
    while(!place_meeting(x,y+sign(verticalSpeed),obj_Collision)){
        y += sign(verticalSpeed);
    }
    verticalSpeed = 0;
    canJump = 1;
}

y += verticalSpeed;

//Platform Collision
if (place_meeting(x, y+1, obj_Collision)) {
    //Standing on a Solid Surface
    canJump = 1;
    verticalSpeed = keyJump * -jumpSpeed;
    
    if (pressedJump &amp;&amp; (canJump == 1)){
        //Start Jumping
        canJump = -1; 
        alarm[0] = .1 * room_speed;
    }
} else {
    //Falling
    //Limit Player Gravity
    canJump = 0;
    if (verticalSpeed &lt; 12) verticalSpeed += playerGravity;  
}

if(canJump = -1){
    //Jumping
    verticalSpeed -= jumpSpeed;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UpdatePlayerSprite
moving = (-keyMoveLeft + keyMoveRight);
if( !attacking ){

if (moving != 0){
    //Moving
    image_xscale = moving;
}

if (place_meeting(x, y+1, obj_Collision)){
    //Standing On Solid Ground
    if (moving != 0) {
        sprite_index = spr_PlayerRun;
    }else{
        sprite_index = spr_PlayerIdle;
    }
} else {
    //In The Air
    if (canJump == -1){
        //Jumping
        sprite_index = spr_PlayerJump;
    } else if (canJump == 0){
        //Falling
        sprite_index = spr_PlayerFall;
    } else{
        //Unknown
        sprite_index = spr_PlayerIdle;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Actions

// If player hit attack &amp;&amp; canAttack right now
/**
if( keyAttack &amp;&amp; canAttack ){
    sprite_index = spr_Player_Attack;
    instance_create(x,y,obj_Player_Attack);
    canAttack = false;
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot Fire Ball

if ( keyUseSpell )
{
    
    // create instance of fire ball
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( global.Mana &lt; global.max_Mana )
    global.Mana += .1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !invincible ){
    global.Stamina -= 10;
    invincible = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed * .25</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !invincible ){
    global.Stamina -= 5;
    invincible = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed * .25</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change spell array

if ( spellIndex == 0 ) {
    spellIndex = 1;
} else if ( spellIndex = 1 ) {
    spellIndex = 2;
} else {
    spellIndex = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change spell array

if ( spellIndex == 0 ) {
    spellIndex = 2;
} else if ( spellIndex = 2 ) {
    spellIndex = 1;
} else {
    spellIndex = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spell code
var inst

// if the current spell is the life pull, use it
if ( spellIndex = 0 ) {
    global.Mana -= 10;
    // if the image is facing right, spawn a right facing life pull
    if ( image_xscale &gt; 0 ) {
        inst = instance_create( x + 20 , y - 20, obj_lifepull );
    
    // otherwise spawn a left facing life pull
    } else {
        inst = instance_create( x - 20 , y - 20, obj_lifepull );
    }
    
// else if the current spell is the death ball, use it
} else if ( spellIndex = 1 ) {
    global.Mana -= 10;
    // if the image is facing right, spawn a right facing death ball
     if ( image_xscale &gt; 0 ) {
        inst = instance_create( x - 10 , y - 40, obj_deathball );
        with ( inst ) {
            speed = 8;
            direction = 0;
        }
     
     // otherwise spawn a left facing death ball
    } else {
        inst = instance_create( x - 10 , y - 40, obj_deathball );
        with ( inst ) {
            speed = 10;
            direction = 180;
        } 
    }

// otherwise spawn a stone spell
} else {
    global.Mana -= 10;
    // if the image is facing right, spawn a right facing life pull
    if ( image_xscale &gt; 0 ) {
        inst = instance_create( x + 20 , y - 20, obj_stoner );
    
    // otherwise spawn a left facing life pull
    } else {
        inst = instance_create( x - 20 , y - 20, obj_stoner );
    }
    
} 

if( global.Mana &lt;= -10 )
    global.Mana = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// If player hit attack &amp;&amp; canAttack right now
if( canAttack ){
    sprite_index = spr_Player_Attack;
    instance_create(x,y,obj_Player_Attack);
    canAttack = false;
    attacking = true;
    alarm[3] = room_speed/8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>canTeleport</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go To Room Entrance
//Positions the player at the room entrance used
if (instance_exists(global.dest_id))
{
    if ((global.dest_id).teleportDirection == 0)
    {
            //Teleport facing left
            x = (global.dest_id).x - 64;
            y = (global.dest_id).y + 96;
    }
    else
    {
            //Teleport facing right
            x = (global.dest_id).x + 64;
            y = (global.dest_id).y + 96;
    }

}
else
{
    x = x;
    y = y;
}
alarm[10] = 10;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change spell array

if ( spellIndex == 0 ) {
    spellIndex = 1;
} else if ( spellIndex = 1 ) {
    spellIndex = 2;
} else {
    spellIndex = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spell code
var inst

// if the current spell is the life pull, use it
if ( spellIndex = 0 ) {
    global.Mana -= 10;
    // if the image is facing right, spawn a right facing life pull
    if ( image_xscale &gt; 0 ) {
        inst = instance_create( x + 20 , y - 20, obj_lifepull );
    
    // otherwise spawn a left facing life pull
    } else {
        inst = instance_create( x - 20 , y - 20, obj_lifepull );
    }
    
// else if the current spell is the death ball, use it
} else if ( spellIndex = 1 ) {
    global.Mana -= 10;
    // if the image is facing right, spawn a right facing death ball
     if ( image_xscale &gt; 0 ) {
        inst = instance_create( x - 10 , y - 40, obj_deathball );
        with ( inst ) {
            speed = 8;
            direction = 0;
        }
     
     // otherwise spawn a left facing death ball
    } else {
        inst = instance_create( x - 10 , y - 40, obj_deathball );
        with ( inst ) {
            speed = 10;
            direction = 180;
        } 
    }

// otherwise spawn a stone spell
} else {
    global.Mana -= 10;
    // if the image is facing right, spawn a right facing life pull
    if ( image_xscale &gt; 0 ) {
        inst = instance_create( x + 20 , y - 20, obj_stoner );
    
    // otherwise spawn a left facing life pull
    } else {
        inst = instance_create( x - 20 , y - 20, obj_stoner );
    }
    
} 

if( global.Mana &lt;= -10 )
    global.Mana = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change spell array

if ( spellIndex == 0 ) {
    spellIndex = 1;
} else if ( spellIndex = 1 ) {
    spellIndex = 2;
} else {
    spellIndex = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
